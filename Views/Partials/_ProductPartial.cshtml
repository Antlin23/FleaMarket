@using FleaMarket.Models.Entities;
@using FleaMarket.Models.ViewModels
@using FleaMarket.Services;
@model SearchProductViewModel
@inject UserService _userService
@inject ProductService _productService
@{
    var productIdString = ViewData["productId"]?.ToString();

    Guid productId = Guid.Parse(productIdString);


    var product = await _productService.GetProductAsync(x => x.Id == productId);


    var market = await _productService.GetMarketAsync(x => x.Id == product.MarketId);

    UserEntity user = await _userService.GetUserAsync(x => x.Id == product.UserId);

    UserEntity loggedInUser = new UserEntity();

    loggedInUser = await _userService.GetUserAsync(x => x.UserName == User.Identity.Name);

    var place = user.Place;
}
<div class="product-card">    
    @if (product.HasImage == true)
    {
        <div class="product-card--img-container">
            <img id="productImg" src="" alt="Bild kan ej visas." />
        </div>
    }
    <div class="product-card--content">
        <div>
            <h4 class="product-title">@product.Title</h4>
            <p class="market-title">@market.MarketTitle</p>
            @if (product.Brand != null)
            {
                <p>Märke: @product.Brand</p>
            }
        </div>
        @if (product.Price != 0)
        {
            <p class="product-price">@product.Price kr</p>
        }

        <div class="d-flex justify-content-between">
            <!-- Trigger/Open The Modal -->
            <button class="button purple-button product-card--see-more-btn" id="seeMoreBtn-@product.Id" onclick='openModal("seeMoreModal-@product.Id")'>Se mer</button>
            @if (User != null && loggedInUser != null)
            {
                if (product.UserId == loggedInUser.Id || User.IsInRole("Admin"))
                {
                    <div id="deleteProductConGroup-@product.Id" class="d-none btnConfirmationGroup">
                        <form method="post" asp-controller="Product" asp-action="DeleteProduct" asp-route-productId="@product.Id">
                            <button onclick='hideConfirmationGroup()' class="button purple-button product-card--delete-button" type="button">Avbryt</button>
                            <button class="button orange-button product-card--delete-button" type="submit">Bekräfta</button>
                        </form>
                    </div>
                    <div id="deleteProductGroup-@product.Id" class="singleBtnGroup">
                        <button onclick='showConfirmationGroup("deleteProductGroup-", "deleteProductConGroup-", "@product.Id.ToString()")' class="button orange-button product-card--delete-button show-congroup-btn">Ta bort</button>
                    </div>
                }
            }
        </div>
        <!-- The Modal -->
        <div id="seeMoreModal-@product.Id" class="product-card--content--modal __modal">
            <div class="modal-content">
                @if (product.HasImage == true)
                {
                    <div class="modal-content--img-group">
                        <div class="close"><i class="fa-solid fa-xmark"></i></div>
                        <img class="product-card--content--modal--product-img" src="" alt="Bild kan ej visas." />
                    </div>
                }
                <div class="modal-content--content">
                    <div class="modal-content--market-category-group">
                        <a class="small-text modal-content--market-title" asp-controller="Product" asp-action="Market" asp-route-marketName="@market.MarketTitle">@market.MarketTitle</a>
                        @if(product.Category != "Alla kategorier")
                        {
                            <p class="modal-content--breadcrumb-divider">/</p>
                            <form method="post" asp-controller="Product" asp-action="Market">
                                <input asp-for="@Model.Category" value="@product.Category" hidden />
                                <input asp-for="@Model.MarketName" value="@market.MarketTitle" hidden />
                                <input type="submit" class="small-text modal-content--category-name" value="@product.Category" />
                            </form>
                        }
                    </div>
                    <h5 class="modal-content--product-title">@product.Title</h5>
                    <div class="modal-content--place-price-group">
                        <div class="modal-content--place-group">
                            <p class="small-text">Plats</p>
                            <p class="modal-content--place">@place</p>
                        </div>
                        <div class="modal-content--price-group">
                            <p class="small-text">Pris</p>
                            @if (product.Price != 0)
                            {
                                <p class="modal-content--price">@product.Price kr</p>
                            }
                            else
                            {
                                <p class="">Pris ej angett</p>
                            }
                        </div>
                    </div>
                    @if (user.PlaceImgUrl != null)
                    {
                        <img class="modal-content--place-img" src="~/Images/UserPlaces/@user.PlaceImgUrl" alt="Bild kan ej visas." />
                    }
                </div>
            </div>
        </div>
    </div>

</div>

<!--Gets pictureUrl from azure storage-->
<script>
    window.addEventListener('DOMContentLoaded', async () => {
        const getPicture = async () => {
            const parentId = "@product.Id";
            const url = `http://localhost:7036/api/GetFilePath?parentId=${parentId}`;
            try {
                const response = await fetch(url, { method: 'GET' });
                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }
                const data = await response.json(); // Use response.json() to handle JSON response
                console.log('Data received:', data);
                return data.filePath; // Return the JSON response
            } catch (error) {
                console.error('There has been a problem with your fetch operation:', error);
            }
        };

        try {
            const filePath = await getPicture();
            if (filePath) {
                const imgElement = document.getElementById("productImg");
                console.log('Image element:', imgElement);
                if (imgElement) {
                    imgElement.src = filePath;
                } else {
                    console.error('Element with id "productImg" not found');
                }
            }
        } catch (error) {
            console.error('Error in loading picture:', error);
        }
    });

    
</script>