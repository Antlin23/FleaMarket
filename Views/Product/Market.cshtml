@using FleaMarket.Models.Entities;
@using FleaMarket.Models.ViewModels;
@using FleaMarket.Services;
@inject ProductService productService
@inject UserService userService;
@model SearchProductViewModel
@{
    string marketName = "";

    if (Model == null)
    {
        marketName = ViewData["MarketName"].ToString();
    }
    else
    {
        marketName = Model.MarketName;
    }
    MarketEntity market = await productService.GetMarketAsync(x => x.MarketTitle == marketName);

    IEnumerable<ProductEntity> marketProducts = new List<ProductEntity>();

    marketProducts = productService.GetAllMarketProducts(market.Id);

    ViewData["Title"] = marketName;

}
<nav class="container breadcrumb-container" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Hem</a></li>
        <li class="breadcrumb-item"><a asp-controller="Product" asp-action="Index">Marknader</a></li>
        <li class="breadcrumb-item active" aria-current="page">@marketName</li>
    </ol>
</nav>

<h6 class="container">Sök efter produkter på @marketName</h6>
<form method="post" class="container market-search-form">
    <div class="form-group">
        <i class="input-icon fa-solid fa-magnifying-glass"></i>
        <input id="searchString" asp-for="SearchString" type="text" placeholder="Vad vill du söka efter?" />
    </div>
    <div class="form-group">
        <i class="input-icon fa-solid fa-list"></i>
        <i class="dropdown-icon fa-solid fa-caret-down"></i>

        <partial name="/Views/Partials/_CategoryOptionsPartial.cshtml" model="@Model"/>

    </div>
    <input asp-for="MarketName" type="text" hidden value="@marketName" />
    <a asp-controller="Product" asp-action="Market" asp-route-marketName="@marketName"><i class="me-2 fa-regular fa-trash-can"></i>Rensa filter</a>
    <button class="button orange-bg-button" type="submit">Sök</button>
</form>

<div class="container mt-4">
    <!--Model.NoProducts == null && Model.Products == null-->
    @if (Model == null)
    {
        @foreach (var product in marketProducts)
        {
            ViewData["productId"] = product.Id.ToString();
            <partial name="/Views/Partials/_ProductPartial.cshtml" />
        }
    }
    else if (Model.NoProducts == null && Model.Products != null)
    {
        if (Model.Products.Count() == 0)
        {
            <p>Inga produkter hittades på @marketName</p>
        }
        else
        {
            @foreach (var product in Model.Products)
            {
                ViewData["productId"] = product.Id.ToString();
                <partial name="/Views/Partials/_ProductPartial.cshtml" />
            }
        }
    }
    else
    {
        @foreach (var product in marketProducts)
        {
            ViewData["productId"] = product.Id.ToString();
            <partial name="/Views/Partials/_ProductPartial.cshtml" />
        }
    }
</div>